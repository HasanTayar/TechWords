{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet CartComponent = class CartComponent {\n  constructor(cartService, router, userService, activeRoute) {\n    this.cartService = cartService;\n    this.router = router;\n    this.userService = userService;\n    this.activeRoute = activeRoute;\n    this.users = [];\n    this.products = [];\n    this.items = this.cartService.getItems();\n    this.totalPrice = this.cartService.getTotalPrice();\n  }\n  ngOnInit() {\n    const email = this.activeRoute.snapshot.params['email'];\n    this.products = this.cartService.getItems();\n    //this.users = this.userService.getUsers()\n    this.loggedIn = this.users.find(user => user.email === email);\n  }\n  removeItem(item) {\n    this.cartService.removeFromCart(item);\n  }\n  clearCart() {\n    this.cartService.clearCart();\n    this.items = this.cartService.getItems();\n    this.totalPrice = 0;\n  }\n  deletefromcart(product) {\n    this.cartService.removeFromCart(product);\n    this.totalPrice -= product.product.price * product.qty;\n  }\n  QuantityUp(product) {\n    this.cartService.quantityUp(product);\n    this.totalPrice += product.product.price;\n  }\n  QuantityDown(product) {\n    if (product.qty == 1) {\n      this.deletefromcart(product);\n      return;\n    }\n    this.cartService.quantityDown(product);\n    this.totalPrice -= product.product.price;\n  }\n  checkOut() {\n    this.cartService.payment();\n    this.clearCart();\n  }\n};\nCartComponent = __decorate([Component({\n  selector: 'app-cart',\n  templateUrl: './cart.component.html',\n  styleUrls: ['./cart.component.css']\n})], CartComponent);\nexport { CartComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAY1C,IAAMC,aAAa,GAAnB,MAAMA,aAAa;EAOxBC,YAAoBC,WAAyB,EAAUC,MAAc,EAAUC,WAAyB,EAAUC,WAA0B;IAAxH,gBAAW,GAAXH,WAAW;IAAwB,WAAM,GAANC,MAAM;IAAkB,gBAAW,GAAXC,WAAW;IAAwB,gBAAW,GAAXC,WAAW;IAN7H,UAAK,GAAW,EAAE;IAEX,aAAQ,GAAU,EAAE;IAC5B,UAAK,GAAG,IAAI,CAACH,WAAW,CAACI,QAAQ,EAAE;IAClC,eAAU,GAAW,IAAI,CAACJ,WAAW,CAACK,aAAa,EAAE;EAE2F;EAEhJC,QAAQ;IACN,MAAMC,KAAK,GAAG,IAAI,CAACJ,WAAW,CAACK,QAAQ,CAACC,MAAM,CAAC,OAAO,CAAC;IACvD,IAAI,CAACC,QAAQ,GAAG,IAAI,CAACV,WAAW,CAACI,QAAQ,EAAE;IAC3C;IACA,IAAI,CAACO,QAAQ,GAAG,IAAI,CAACC,KAAK,CAACC,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACP,KAAK,KAAKA,KAAK,CAAC;EAC/D;EAEAQ,UAAU,CAACC,IAAS;IAClB,IAAI,CAAChB,WAAW,CAACiB,cAAc,CAACD,IAAI,CAAC;EACvC;EACAE,SAAS;IACP,IAAI,CAAClB,WAAW,CAACkB,SAAS,EAAE;IAC5B,IAAI,CAACC,KAAK,GAAG,IAAI,CAACnB,WAAW,CAACI,QAAQ,EAAE;IACxC,IAAI,CAACgB,UAAU,GAAG,CAAC;EACrB;EACAC,cAAc,CAACC,OAAoB;IACjC,IAAI,CAACtB,WAAW,CAACiB,cAAc,CAACK,OAAO,CAAC;IACxC,IAAI,CAACF,UAAU,IAAEE,OAAO,CAACA,OAAO,CAACC,KAAK,GAACD,OAAO,CAACE,GAAG;EACpD;EACAC,UAAU,CAACH,OAAmB;IAC5B,IAAI,CAACtB,WAAW,CAAC0B,UAAU,CAACJ,OAAO,CAAC;IACpC,IAAI,CAACF,UAAU,IAAGE,OAAO,CAACA,OAAO,CAACC,KAAK;EAEzC;EACAI,YAAY,CAACL,OAAmB;IAChC,IAAGA,OAAO,CAACE,GAAG,IAAE,CAAC,EAAC;MAChB,IAAI,CAACH,cAAc,CAACC,OAAO,CAAC;MAC5B;;IAEF,IAAI,CAACtB,WAAW,CAAC4B,YAAY,CAACN,OAAO,CAAC;IACtC,IAAI,CAACF,UAAU,IAAGE,OAAO,CAACA,OAAO,CAACC,KAAK;EAEvC;EACAM,QAAQ;IACN,IAAI,CAAC7B,WAAW,CAAC8B,OAAO,EAAE;IAC1B,IAAI,CAACZ,SAAS,EAAE;EAClB;CAED;AA/CYpB,aAAa,eALzBD,SAAS,CAAC;EACTkC,QAAQ,EAAE,UAAU;EACpBC,WAAW,EAAE,uBAAuB;EACpCC,SAAS,EAAE,CAAC,sBAAsB;CACnC,CAAC,GACWnC,aAAa,CA+CzB;SA/CYA,aAAa","names":["Component","CartComponent","constructor","cartService","router","userService","activeRoute","getItems","getTotalPrice","ngOnInit","email","snapshot","params","products","loggedIn","users","find","user","removeItem","item","removeFromCart","clearCart","items","totalPrice","deletefromcart","product","price","qty","QuantityUp","quantityUp","QuantityDown","quantityDown","checkOut","payment","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\hasan\\MyWeb\\src\\app\\cart\\cart.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { CartProduct } from '../model/cart';\nimport { User } from '../model/user';\nimport { CartService } from '../services/cart.service';\nimport { UsersService } from '../services/users.service';\n\n@Component({\n  selector: 'app-cart',\n  templateUrl: './cart.component.html',\n  styleUrls: ['./cart.component.css']\n})\nexport class CartComponent implements OnInit {\n  users: User[] = []\n  loggedIn: any\n  public products: any[] = []\n\titems = this.cartService.getItems()\n  totalPrice: number = this.cartService.getTotalPrice();\n\n  constructor(private cartService : CartService, private router: Router, private userService: UsersService, private activeRoute:ActivatedRoute) { }\n\t\n  ngOnInit(): void {\n    const email = this.activeRoute.snapshot.params['email']\n    this.products = this.cartService.getItems()\n    //this.users = this.userService.getUsers()\n    this.loggedIn = this.users.find(user => user.email === email)\n  }\n\n  removeItem(item: any){\n    this.cartService.removeFromCart(item);\n  }\n  clearCart() {\n    this.cartService.clearCart();\n    this.items = this.cartService.getItems();\n    this.totalPrice = 0;\n  }\n  deletefromcart(product: CartProduct){\n    this.cartService.removeFromCart(product);\n    this.totalPrice-=product.product.price*product.qty;\n  }\n  QuantityUp(product:CartProduct){\n    this.cartService.quantityUp(product);\n    this.totalPrice+= product.product.price ;\n  \n  }\n  QuantityDown(product:CartProduct){\n  if(product.qty==1){\n    this.deletefromcart(product);\n    return;\n  }\n  this.cartService.quantityDown(product);\n  this.totalPrice-= product.product.price ;\n\n  }\n  checkOut(){  \n    this.cartService.payment()\n    this.clearCart();\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}