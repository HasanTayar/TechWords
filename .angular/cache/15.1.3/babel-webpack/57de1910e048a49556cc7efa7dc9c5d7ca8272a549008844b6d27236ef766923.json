{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../services/users.service\";\nimport * as i3 from \"@angular/common/http\";\nimport * as i4 from \"@angular/common\";\nfunction NavbarComponent_a_17_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"a\", 5);\n    i0.ɵɵlistener(\"click\", function NavbarComponent_a_17_Template_a_click_0_listener() {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.onLoginLogout());\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r0.loginText);\n  }\n}\nexport class NavbarComponent {\n  constructor(router, usersService, http) {\n    this.router = router;\n    this.usersService = usersService;\n    this.http = http;\n    this.loginText = \"Login\";\n  }\n  ngOnInit() {\n    this.updateLoginText();\n  }\n  updateLoginText() {\n    this.loginText = this.usersService.currentUser ? \"Logout\" : \"Login\";\n  }\n  onLoginLogout() {\n    if (this.loginText === \"Login\") {\n      this.router.navigate(['profile/login']);\n    } else {\n      this.usersService.logout().then(() => {\n        this.updateLoginText();\n        this.router.navigate(['/home']);\n      });\n    }\n  }\n}\nNavbarComponent.ɵfac = function NavbarComponent_Factory(t) {\n  return new (t || NavbarComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.UsersService), i0.ɵɵdirectiveInject(i3.HttpClient));\n};\nNavbarComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: NavbarComponent,\n  selectors: [[\"app-navbar\"]],\n  decls: 18,\n  vars: 0,\n  consts: [[\"routerLinkActive\", \"active\", \"routerLink\", \"home\"], [\"routerLinkActive\", \"active\", \"routerLink\", \"catalog\"], [\"routerLinkActive\", \"active\", \"routerLink\", \"about\"], [\"routerLinkActive\", \"active\", \"routerLink\", \"cart\"], [\"routerLinkActive\", \"active\", \"routerLink\", \"profile\", 3, \"click\", 4, \"ngIf\"], [\"routerLinkActive\", \"active\", \"routerLink\", \"profile\", 3, \"click\"]],\n  template: function NavbarComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ul\")(1, \"li\")(2, \"a\");\n      i0.ɵɵtext(3, \"TechWorld\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(4, \"li\")(5, \"a\", 0);\n      i0.ɵɵtext(6, \"Home\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(7, \"li\")(8, \"a\", 1);\n      i0.ɵɵtext(9, \"Catalog\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(10, \"li\")(11, \"a\", 2);\n      i0.ɵɵtext(12, \"About Us\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(13, \"li\")(14, \"a\", 3);\n      i0.ɵɵtext(15, \"Cart\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(16, \"li\");\n      i0.ɵɵtemplate(17, NavbarComponent_a_17_Template, 2, 1, \"a\", 4);\n      i0.ɵɵelementEnd()();\n    }\n  },\n  dependencies: [i4.NgIf, i1.RouterLink, i1.RouterLinkActive],\n  styles: [\"ul[_ngcontent-%COMP%] {\\r\\n    list-style-type: none;\\r\\n    margin: 0;\\r\\n    padding: 0;\\r\\n    overflow: hidden;\\r\\n    background-color: #333;\\r\\n  }\\r\\n  \\r\\n  li[_ngcontent-%COMP%] {\\r\\n    float: left;\\r\\n  }\\r\\n  \\r\\n  li[_ngcontent-%COMP%]   a[_ngcontent-%COMP%] {\\r\\n    display: block;\\r\\n    color: rgb(255, 255, 255);\\r\\n    text-align: center;\\r\\n    padding: 14px 16px;\\r\\n    text-decoration: none;\\r\\n  }\\r\\n  \\r\\n  \\r\\n  li[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]:hover {\\r\\n    background-color: rgba(255, 255, 255, 0);\\r\\n  }\\r\\n\\r\\n  .active[_ngcontent-%COMP%] {\\r\\n    background-color: #0548da;\\r\\n  }\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbmF2YmFyL25hdmJhci5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0kscUJBQXFCO0lBQ3JCLFNBQVM7SUFDVCxVQUFVO0lBQ1YsZ0JBQWdCO0lBQ2hCLHNCQUFzQjtFQUN4Qjs7RUFFQTtJQUNFLFdBQVc7RUFDYjs7RUFFQTtJQUNFLGNBQWM7SUFDZCx5QkFBeUI7SUFDekIsa0JBQWtCO0lBQ2xCLGtCQUFrQjtJQUNsQixxQkFBcUI7RUFDdkI7OztFQUdBO0lBQ0Usd0NBQXdDO0VBQzFDOztFQUVBO0lBQ0UseUJBQXlCO0VBQzNCIiwic291cmNlc0NvbnRlbnQiOlsidWwge1xyXG4gICAgbGlzdC1zdHlsZS10eXBlOiBub25lO1xyXG4gICAgbWFyZ2luOiAwO1xyXG4gICAgcGFkZGluZzogMDtcclxuICAgIG92ZXJmbG93OiBoaWRkZW47XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMzMzO1xyXG4gIH1cclxuICBcclxuICBsaSB7XHJcbiAgICBmbG9hdDogbGVmdDtcclxuICB9XHJcbiAgXHJcbiAgbGkgYSB7XHJcbiAgICBkaXNwbGF5OiBibG9jaztcclxuICAgIGNvbG9yOiByZ2IoMjU1LCAyNTUsIDI1NSk7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICBwYWRkaW5nOiAxNHB4IDE2cHg7XHJcbiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XHJcbiAgfVxyXG4gIFxyXG4gIFxyXG4gIGxpIGE6aG92ZXIge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCAwKTtcclxuICB9XHJcblxyXG4gIC5hY3RpdmUge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzA1NDhkYTtcclxuICB9Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;;;;IAaUA,4BAAmF;IAAzEA;MAAAA;MAAA;MAAA,OAASA,qCAAe;IAAA,EAAC;IAAgDA,YAAe;IAAAA,iBAAI;;;;IAAnBA,eAAe;IAAfA,sCAAe;;;AAK5G,OAAM,MAAOC,eAAe;EAG1BC,YAAoBC,MAAc,EAAUC,YAA0B,EAAWC,IAAe;IAA5E,WAAM,GAANF,MAAM;IAAkB,iBAAY,GAAZC,YAAY;IAAyB,SAAI,GAAJC,IAAI;IAFrF,cAAS,GAAW,OAAO;EAEyE;EAEpGC,QAAQ;IACN,IAAI,CAACC,eAAe,EAAE;EACxB;EACAA,eAAe;IACb,IAAI,CAACC,SAAS,GAAG,IAAI,CAACJ,YAAY,CAACK,WAAW,GAAG,QAAQ,GAAG,OAAO;EACrE;EACAC,aAAa;IACX,IAAI,IAAI,CAACF,SAAS,KAAK,OAAO,EAAE;MAC9B,IAAI,CAACL,MAAM,CAACQ,QAAQ,CAAC,CAAC,eAAe,CAAC,CAAC;KACxC,MAAM;MACL,IAAI,CAACP,YAAY,CAACQ,MAAM,EAAE,CAACC,IAAI,CAAC,MAAK;QACnC,IAAI,CAACN,eAAe,EAAE;QACtB,IAAI,CAACJ,MAAM,CAACQ,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;MACjC,CAAC,CAAC;;EAEN;;AApBWV,eAAe;mBAAfA,eAAe;AAAA;AAAfA,eAAe;QAAfA,eAAe;EAAAa;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MAXxBlB,0BAAI;MACKA,yBAAS;MAAAA,iBAAI;MACpBA,0BAAI;MAA+CA,oBAAI;MAAAA,iBAAI;MAC3DA,0BAAI;MAAkDA,uBAAO;MAAAA,iBAAI;MACjEA,2BAAI;MAAgDA,yBAAQ;MAAAA,iBAAI;MAChEA,2BAAI;MAA+CA,qBAAI;MAAAA,iBAAI;MAC3DA,2BAAI;MAAAA,8DAAsG;MAAAA,iBAAK","names":["i0","NavbarComponent","constructor","router","usersService","http","ngOnInit","updateLoginText","loginText","currentUser","onLoginLogout","navigate","logout","then","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\hasan\\MyWeb\\src\\app\\navbar\\navbar.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { UsersService } from '../services/users.service';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\n@Component({\n  selector: 'app-navbar',\n  template: `\n    <ul>\n      <li><a>TechWorld</a></li>\n      <li><a routerLinkActive=\"active\" routerLink=\"home\">Home</a></li>\n      <li><a routerLinkActive=\"active\" routerLink=\"catalog\">Catalog</a></li>\n      <li><a routerLinkActive=\"active\" routerLink=\"about\">About Us</a></li>\n      <li><a routerLinkActive=\"active\" routerLink=\"cart\">Cart</a></li>\n      <li><a  *ngIf (click)=\"onLoginLogout()\" routerLinkActive=\"active\" routerLink=\"profile\">{{ loginText }}</a></li>\n    </ul>\n  `,\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n  loginText: string = \"Login\";\n\n  constructor(private router: Router, private usersService: UsersService , private http:HttpClient) { }\n\n  ngOnInit(): void {\n    this.updateLoginText();\n  }\n  updateLoginText() {\n    this.loginText = this.usersService.currentUser ? \"Logout\" : \"Login\";\n  }\n  onLoginLogout() {\n    if (this.loginText === \"Login\") {\n      this.router.navigate(['profile/login']);\n    } else {\n      this.usersService.logout().then(() => {\n        this.updateLoginText();\n        this.router.navigate(['/home']);\n      });\n    }\n  }\n  \n  \n \n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}