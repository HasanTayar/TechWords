{"ast":null,"code":"export class Cart {}\nconstructor();\n{\n  this.user = localStorage.getItem('user');\n}\nexport class CartProduct {\n  constructor(product) {\n    this.qty = 1;\n    this.product = product;\n  }\n}","map":{"version":3,"mappings":"AAEA,OAAM,MAAOA,IAAI;AAObC,WAAW,EAAE;AAAA;EACT,IAAI,CAACC,IAAI,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;;AAuBhD,OAAM,MAAOC,WAAW;EAGpBJ,YAAYK,OAAiB;IAD7B,QAAG,GAAG,CAAC;IAEH,IAAI,CAACA,OAAO,GAAGA,OAAO;EAC1B","names":["Cart","constructor","user","localStorage","getItem","CartProduct","product"],"sourceRoot":"","sources":["C:\\Users\\hasan\\MyWeb\\src\\app\\model\\cart.ts"],"sourcesContent":["import { Product } from \"./product\"\r\n\r\nexport class Cart {\r\n    id: number;\r\n    products: CartProduct[];\r\n    user: string;  // new property to store the user email\r\n  }\r\n  \r\n\r\n    constructor(){\r\n        this.user = localStorage.getItem('user')\r\n    }\r\n\t\r\n    // add(product: any) {\r\n    //     for(let i = 0; i < this.products.length; i++){\r\n    //         this.products.push(product)\r\n    //         this.totalPrice+=this.products[i].product.price\r\n    //         this.products[i].qty++\r\n    //     }\r\n    // }\r\n\r\n    // remove(product: Product) {\r\n    //     for(let i=0; i < this.products.length; i++) {\r\n    //         if (this.products[i].product.serialNumber === product.serialNumber) {\r\n    //           this.totalPrice-=product.price;\r\n    //           this.products.splice(i,1);\r\n    //           this.products[i].qty--\r\n    //         }\r\n    //     }\r\n    // }\r\n\r\n}\r\n\r\nexport class CartProduct {\r\n    product : Product\r\n    qty = 1\r\n    constructor(product : Product){\r\n        this.product = product\r\n    }\r\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}