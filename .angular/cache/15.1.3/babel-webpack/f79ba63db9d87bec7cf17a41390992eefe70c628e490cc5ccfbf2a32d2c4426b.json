{"ast":null,"code":"import { FormControl, FormGroup } from '@angular/forms';\nimport { tap, switchMap } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/users.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nexport class RegisterComponent {\n  constructor(service, router) {\n    this.service = service;\n    this.router = router;\n  }\n  ngOnInit() {\n    this.createRegisterForm();\n  }\n  createRegisterForm() {\n    this.registerForm = new FormGroup({\n      name: new FormControl(),\n      email: new FormControl(),\n      pass: new FormControl(),\n      repass: new FormControl(),\n      birthdate: new FormControl(),\n      gender: new FormControl()\n    });\n  }\n  onSubmit() {\n    const email = this.registerForm.value.email;\n    const pass = this.registerForm.value.pass;\n    const repass = this.registerForm.value.repass;\n    this.service.isExists(email).pipe(switchMap(userExists => {\n      if (userExists) {\n        alert('User already exists');\n        return [];\n      } else if (pass !== repass) {\n        alert('Wrong Password!!!');\n        return [];\n      } else {\n        const user = {\n          name: this.registerForm.value.name,\n          email: this.registerForm.value.email,\n          password: this.registerForm.value.pass,\n          birthdate: this.registerForm.value.birthdate,\n          gender: this.registerForm.value.gender\n        };\n        return this.service.addUser(user);\n      }\n    }), tap(() => {\n      this.registerForm.reset();\n      this.router.navigateByUrl('/login');\n    })).subscribe(() => {}, error => {\n      console.error(error);\n    });\n  }\n}\nRegisterComponent.ɵfac = function RegisterComponent_Factory(t) {\n  return new (t || RegisterComponent)(i0.ɵɵdirectiveInject(i1.UsersService), i0.ɵɵdirectiveInject(i2.Router));\n};\nRegisterComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: RegisterComponent,\n  selectors: [[\"app-register\"]],\n  decls: 50,\n  vars: 2,\n  consts: [[1, \"vh-100\", \"gradient-custom\"], [1, \"container\", \"py-5\", \"h-100\"], [1, \"row\", \"justify-content-center\", \"align-items-center\", \"h-100\"], [1, \"col-12\", \"col-lg-9\", \"col-xl-7\"], [1, \"card\", \"shadow-2-strong\", \"card-registration\", 2, \"border-radius\", \"15px\"], [1, \"card-body\", \"p-4\", \"p-md-5\"], [1, \"mb-4\", \"pb-2\", \"pb-md-0\", \"mb-md-5\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"row\"], [1, \"col-md-6\", \"mb-4\"], [1, \"form-outline\"], [\"for\", \"firstName\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"name\", \"formControlName\", \"name\", \"required\", \"\", 1, \"form-control\"], [1, \"col-md-6\", \"mb-4\", \"pb-2\"], [1, \"form-outline\", \"mb-4\"], [\"for\", \"emailAddress\", 1, \"form-label\"], [\"type\", \"email\", \"id\", \"email\", \"formControlName\", \"email\", \"required\", \"\", 1, \"form-control\"], [\"for\", \"pass\", 1, \"form-label\"], [\"type\", \"password\", \"id\", \"pass\", \"formControlName\", \"pass\", \"required\", \"\", 1, \"form-control\"], [\"type\", \"password\", \"id\", \"pass\", \"formControlName\", \"repass\", \"required\", \"\", 1, \"form-control\"], [1, \"col-md-6\", \"mb-4\", \"d-flex\", \"align-items-center\"], [1, \"form-outline\", \"datepicker\", \"w-100\"], [\"for\", \"birthdayDate\", 1, \"form-label\"], [\"type\", \"date\", \"id\", \"birthdayDate\", \"formControlName\", \"birthdate\", \"required\", \"\", 1, \"form-control\", \"-lg\"], [1, \"mb-2\", \"pb-1\"], [1, \"form-check\", \"form-check-inline\"], [\"type\", \"radio\", \"name\", \"inlineRadioOptions\", \"id\", \"male\", \"value\", \"male\", \"checked\", \"\", \"formControlName\", \"gender\", \"required\", \"\", 1, \"form-check-input\"], [\"for\", \"male\", 1, \"form-check-label\"], [\"type\", \"radio\", \"name\", \"inlineRadioOptions\", \"id\", \"female\", \"value\", \"female\", \"checked\", \"\", \"formControlName\", \"gender\", \"required\", \"\", 1, \"form-check-input\"], [\"for\", \"female\", 1, \"form-check-label\"], [1, \"mt-4\", \"pt-2\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"btn-lg\", 3, \"disabled\"]],\n  template: function RegisterComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"router-outlet\");\n      i0.ɵɵelementStart(1, \"section\", 0)(2, \"div\", 1)(3, \"div\", 2)(4, \"div\", 3)(5, \"div\", 4)(6, \"div\", 5)(7, \"h3\", 6);\n      i0.ɵɵtext(8, \"Registration Form\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"form\", 7);\n      i0.ɵɵlistener(\"ngSubmit\", function RegisterComponent_Template_form_ngSubmit_9_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(10, \"div\", 8)(11, \"div\", 9)(12, \"div\", 10)(13, \"label\", 11);\n      i0.ɵɵtext(14, \"Full Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(15, \"input\", 12);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(16, \"div\", 8)(17, \"div\", 13)(18, \"div\", 14)(19, \"label\", 15);\n      i0.ɵɵtext(20, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(21, \"input\", 16);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(22, \"div\", 14)(23, \"label\", 17);\n      i0.ɵɵtext(24, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(25, \"input\", 18);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(26, \"div\", 10)(27, \"label\", 17);\n      i0.ɵɵtext(28, \"Repeat Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(29, \"input\", 19);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(30, \"div\", 8)(31, \"div\", 20)(32, \"div\", 21)(33, \"label\", 22);\n      i0.ɵɵtext(34, \"Birthday\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(35, \"input\", 23);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(36, \"div\", 8)(37, \"div\")(38, \"h6\", 24);\n      i0.ɵɵtext(39, \"Gender: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(40, \"div\", 25);\n      i0.ɵɵelement(41, \"input\", 26);\n      i0.ɵɵelementStart(42, \"label\", 27);\n      i0.ɵɵtext(43, \"Male\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(44, \"div\", 25);\n      i0.ɵɵelement(45, \"input\", 28);\n      i0.ɵɵelementStart(46, \"label\", 29);\n      i0.ɵɵtext(47, \"Female\");\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(48, \"div\", 30);\n      i0.ɵɵelement(49, \"input\", 31);\n      i0.ɵɵelementEnd()()()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(9);\n      i0.ɵɵproperty(\"formGroup\", ctx.registerForm);\n      i0.ɵɵadvance(40);\n      i0.ɵɵproperty(\"disabled\", !ctx.registerForm.valid);\n    }\n  },\n  dependencies: [i2.RouterOutlet, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.RadioControlValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.FormGroupDirective, i3.FormControlName],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["FormControl","FormGroup","tap","switchMap","RegisterComponent","constructor","service","router","ngOnInit","createRegisterForm","registerForm","name","email","pass","repass","birthdate","gender","onSubmit","value","isExists","pipe","userExists","alert","user","password","addUser","reset","navigateByUrl","subscribe","error","console","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\Users\\hasan\\MyWeb\\src\\app\\register\\register.component.ts","C:\\Users\\hasan\\MyWeb\\src\\app\\register\\register.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { User } from '../model/user';\nimport { UsersService } from '../services/users.service';\nimport { map, tap, switchMap } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n  registerForm!: FormGroup;\n\n  constructor(private service: UsersService, private router: Router) {}\n\n  ngOnInit(): void {\n    this.createRegisterForm();\n  }\n\n  createRegisterForm() {\n    this.registerForm = new FormGroup({\n      name: new FormControl(),\n      email: new FormControl(),\n      pass: new FormControl(),\n      repass: new FormControl(),\n      birthdate: new FormControl(),\n      gender: new FormControl()\n    });\n  }\n\n  onSubmit() {\n    const email = this.registerForm.value.email;\n    const pass = this.registerForm.value.pass;\n    const repass = this.registerForm.value.repass;\n  \n    this.service\n      .isExists(email)\n      .pipe(\n        switchMap(userExists => {\n          if (userExists) {\n            alert('User already exists');\n            return [];\n          } else if (pass !== repass) {\n            alert('Wrong Password!!!');\n            return [];\n          } else {\n            const user = {\n              name: this.registerForm.value.name,\n              email: this.registerForm.value.email,\n              password: this.registerForm.value.pass,\n              birthdate: this.registerForm.value.birthdate,\n              gender: this.registerForm.value.gender\n            };\n    \n            return this.service.addUser(user);\n          }\n        }),\n        tap(() => {\n          this.registerForm.reset();\n          this.router.navigateByUrl('/login');\n        })\n      )\n      .subscribe(\n        () => {},\n        error => {\n          console.error(error);\n        }\n      );\n  }\n}  \n","<router-outlet></router-outlet>\n<section class=\"vh-100 gradient-custom\">\n  <div class=\"container py-5 h-100\">\n    <div class=\"row justify-content-center align-items-center h-100\">\n      <div class=\"col-12 col-lg-9 col-xl-7\">\n        <div class=\"card shadow-2-strong card-registration\" style=\"border-radius: 15px;\">\n          <div class=\"card-body p-4 p-md-5\">\n            <h3 class=\"mb-4 pb-2 pb-md-0 mb-md-5\">Registration Form</h3>\n            <form  [formGroup]=\"registerForm\" (ngSubmit)=\"onSubmit()\">\n\n                <div class=\"row\">\n                    <div class=\"col-md-6 mb-4\">\n                        <div class=form-group class=\"form-outline\">\n                            <label class=\"form-label\" for=\"firstName\">Full Name</label>\n                            <input type=\"text\" id=\"name\" class=\"form-control\" formControlName=\"name\" required />\n                        </div>\n                    </div>\n                </div>\n                \n                <div class=\"row\">\n                    <div class=\"col-md-6 mb-4 pb-2\">\n                        <div class=form-group class=\"form-outline mb-4\">\n                            <label class=\"form-label\" for=\"emailAddress\">Email</label>\n                            <input type=\"email\" id=\"email\"  class=\"form-control\" formControlName=\"email\" required/>\n                        </div>\n                        <div class=form-group class=\"form-outline mb-4\">\n                            <label class=\"form-label\" for=\"pass\">Password</label>\n                            <input type=\"password\" id=\"pass\" class=\"form-control\" formControlName=\"pass\" required/>\n                        </div>\n                        <div class=form-group class=\"form-outline\">\n                            <label class=\"form-label\" for=\"pass\">Repeat Password</label>\n                            <input type=\"password\" id=\"pass\" class=\"form-control\" formControlName=\"repass\" required/>\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"row\">\n                    <div class=\"col-md-6 mb-4 d-flex align-items-center\">\n                        <div class=form-group class=\"form-outline datepicker w-100\">\n                            <label for=\"birthdayDate\" class=\"form-label\">Birthday</label>\n                            <input  type=\"date\" class=\"form-control -lg\" id=\"birthdayDate\" formControlName=\"birthdate\" required />\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"row\">    \n                    <div>\n                        <h6 class=\"mb-2 pb-1\">Gender: </h6>\n                        <div class=form-group class=\"form-check form-check-inline\">\n                            <input class=\"form-control\"  class=\"form-check-input\" type=\"radio\" name=\"inlineRadioOptions\" id=\"male\" value=\"male\" checked formControlName=\"gender\" required/>\n                            <label class=\"form-check-label\" for=\"male\">Male</label>\n                        </div>\n\n                        <div class=form-group class=\"form-check form-check-inline\">\n                            <input class=\"form-control\"  class=\"form-check-input\" type=\"radio\" name=\"inlineRadioOptions\" id=\"female\" value=\"female\" checked formControlName=\"gender\" required/>\n                            <label class=\"form-check-label\" for=\"female\">Female</label>\n                        </div>\n\n                    </div>\n                </div>\n                <div class=\"mt-4 pt-2\">\n                    <input class=\"btn btn-primary btn-lg\" type=\"submit\" [disabled]=\"!registerForm.valid\"/>\n                </div>\n\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<!-- \n<section class=\"vh-100 bg-image\"\n  style=\"background-image: url('https://mdbcdn.b-cdn.net/img/Photos/new-templates/search-box/img4.webp');\">\n  <div class=\"mask d-flex align-items-center h-100 gradient-custom-3\">\n    <div class=\"container h-100\">\n      <div class=\"row d-flex justify-content-center align-items-center h-100\">\n        <div class=\"col-12 col-md-9 col-lg-7 col-xl-6\">\n          <div class=\"card\" style=\"border-radius: 15px;\">\n            <div class=\"card-body p-5\">\n              <h2 class=\"text-uppercase text-center mb-5\">Create an account</h2>\n\n              <form  [formGroup]=\"registerform\" (ngSubmit)=\"onSubmit()\">\n\n                <div class=\"form-outline mb-4\">\n                  <input type=\"text\" id=\"form3Example1cg\" class=\"form-control\" formControlName=\"name\"/>\n                  <label class=\"form-label\" for=\"form3Example1cg\">Your Name</label>\n                </div>\n\n                <div class=\"form-outline mb-4\">\n                  <input type=\"email\" id=\"form3Example3cg\"  class=\"form-control\" formControlName=\"email\" />\n                  <label class=\"form-label\" for=\"form3Example3cg\">Your Email</label>\n                </div>\n\n                <div class=\"form-outline mb-4\">\n                  <input type=\"password\" id=\"pass\" class=\"form-control\" formControlName=\"password\" />\n                  <label class=\"form-label\" for=\"pass\">Password</label>\n                </div>\n\n                <div class=\"d-flex justify-content-center\">\n                  <button type=\"submit\"\n                    class=\"btn btn-success btn-block btn-lg gradient-custom-4 text-body\">Register</button>\n                </div>\n\n              </form>\n\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</section> -->\n\n\n\n\n\n\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}