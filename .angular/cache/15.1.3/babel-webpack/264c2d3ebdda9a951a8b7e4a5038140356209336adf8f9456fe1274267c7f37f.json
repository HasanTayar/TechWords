{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet CartComponent = class CartComponent {\n  constructor(cartService, router, userService, activeRoute) {\n    this.cartService = cartService;\n    this.router = router;\n    this.userService = userService;\n    this.activeRoute = activeRoute;\n    this.users = [];\n    this.products = [];\n    this.items = this.cartService.getUserCart().products;\n    this.totalPrice = this.cartService.getUserCart().totalPrice;\n  }\n  ngOnInit() {\n    const email = this.activeRoute.snapshot.params['email'];\n    this.products = this.cartService.getUserCart().products;\n    // this.users = this.userService.getUsers();\n    this.loggedIn = this.users.find(user => user.email === email);\n  }\n  removeItem(item) {\n    this.cartService.removeFromCart(item);\n    this.items = this.cartService.getUserCart().products;\n    this.totalPrice = this.cartService.getUserCart().totalPrice;\n  }\n  clearCart() {\n    this.cartService.clearCart();\n    this.items = this.cartService.getUserCart().products;\n    this.totalPrice = 0;\n  }\n  deletefromcart(product) {\n    this.cartService.removeFromCart(product);\n    this.totalPrice -= product.product.price * product.qty;\n    this.items = this.cartService.getUserCart().products;\n    this.totalPrice = this.cartService.getUserCart().totalPrice;\n  }\n  QuantityUp(product) {\n    this.cartService.addToCart(product);\n    this.totalPrice += product.product.price;\n    this.items = this.cartService.getUserCart().products;\n    this.totalPrice = this.cartService.getUserCart().totalPrice;\n  }\n  QuantityDown(product) {\n    if (product.qty === 1) {\n      this.deletefromcart(product);\n      return;\n    }\n    this.cartService.removeFromCart(product);\n    this.totalPrice -= product.product.price;\n    this.items = this.cartService.getUserCart().products;\n    this.totalPrice = this.cartService.getUserCart().totalPrice;\n  }\n  checkOut() {\n    // implement the payment function if needed\n    this.clearCart();\n  }\n};\nCartComponent = __decorate([Component({\n  selector: 'app-cart',\n  templateUrl: './cart.component.html',\n  styleUrls: ['./cart.component.scss']\n})], CartComponent);\nexport { CartComponent };","map":{"version":3,"mappings":"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","names":["Component","CartComponent","constructor","cartService","router","userService","activeRoute","getUserCart","products","totalPrice","ngOnInit","email","snapshot","params","loggedIn","users","find","user","removeItem","item","removeFromCart","items","clearCart","deletefromcart","product","price","qty","QuantityUp","addToCart","QuantityDown","checkOut","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\hasan\\MyWeb\\src\\app\\services\\cart.service.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { User } from '../model/user';\nimport { User } from '../model/user';\nimport { CartService, CartProduct } from '../cart.service';\n\n@Component({\n  selector: 'app-cart',\n  templateUrl: './cart.component.html',\n  styleUrls: ['./cart.component.scss']\n})\nexport class CartComponent implements OnInit {\n  users: User[] = [];\n  loggedIn: any;\n  public products: any[] = [];\n  items = this.cartService.getUserCart().products;\n  totalPrice: number = this.cartService.getUserCart().totalPrice;\n\n  constructor(private cartService: CartService, private router: Router, private userService: UsersService, private activeRoute: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    const email = this.activeRoute.snapshot.params['email'];\n    this.products = this.cartService.getUserCart().products;\n    // this.users = this.userService.getUsers();\n    this.loggedIn = this.users.find(user => user.email === email);\n  }\n\n  removeItem(item: CartProduct) {\n    this.cartService.removeFromCart(item);\n    this.items = this.cartService.getUserCart().products;\n    this.totalPrice = this.cartService.getUserCart().totalPrice;\n  }\n  clearCart() {\n    this.cartService.clearCart();\n    this.items = this.cartService.getUserCart().products;\n    this.totalPrice = 0;\n  }\n  deletefromcart(product: CartProduct) {\n    this.cartService.removeFromCart(product);\n    this.totalPrice -= product.product.price * product.qty;\n    this.items = this.cartService.getUserCart().products;\n    this.totalPrice = this.cartService.getUserCart().totalPrice;\n  }\n  QuantityUp(product: CartProduct) {\n    this.cartService.addToCart(product);\n    this.totalPrice += product.product.price;\n    this.items = this.cartService.getUserCart().products;\n    this.totalPrice = this.cartService.getUserCart().totalPrice;\n  }\n  QuantityDown(product: CartProduct) {\n    if (product.qty === 1) {\n      this.deletefromcart(product);\n      return;\n    }\n    this.cartService.removeFromCart(product);\n    this.totalPrice -= product.product.price;\n    this.items = this.cartService.getUserCart().products;\n    this.totalPrice = this.cartService.getUserCart().totalPrice;\n  }\n  checkOut() {\n    // implement the payment function if needed\n    this.clearCart();\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}