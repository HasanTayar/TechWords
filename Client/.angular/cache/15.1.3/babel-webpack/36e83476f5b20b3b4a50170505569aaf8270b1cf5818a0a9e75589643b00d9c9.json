{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/users.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/router\";\nfunction NavbarComponent_ng_container_13_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"li\")(2, \"a\", 5);\n    i0.ɵɵtext(3, \"Cart\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(4, \"li\")(5, \"a\", 6);\n    i0.ɵɵtext(6, \"Profile\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(7, \"li\")(8, \"a\", 7);\n    i0.ɵɵlistener(\"click\", function NavbarComponent_ng_container_13_Template_a_click_8_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.userService.logout());\n    });\n    i0.ɵɵtext(9, \"Logout\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementContainerEnd();\n  }\n}\nfunction NavbarComponent_ng_template_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\")(1, \"a\", 8);\n    i0.ɵɵtext(2, \"Login\");\n    i0.ɵɵelementEnd()();\n  }\n}\nexport class NavbarComponent {\n  constructor(userService) {\n    this.userService = userService;\n  } // Made userService public to access it in template\n  ngOnInit() {}\n  isLoggedIn() {\n    return this.userService.currentUser !== null && this.userService.currentUser !== \"\";\n  }\n}\nNavbarComponent.ɵfac = function NavbarComponent_Factory(t) {\n  return new (t || NavbarComponent)(i0.ɵɵdirectiveInject(i1.UsersService));\n};\nNavbarComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: NavbarComponent,\n  selectors: [[\"app-navbar\"]],\n  decls: 16,\n  vars: 2,\n  consts: [[\"routerLinkActive\", \"active\", \"routerLink\", \"home\"], [\"routerLinkActive\", \"active\", \"routerLink\", \"catalog\"], [\"routerLinkActive\", \"active\", \"routerLink\", \"about\"], [4, \"ngIf\", \"ngIfElse\"], [\"notLoggedIn\", \"\"], [\"routerLinkActive\", \"active\", \"routerLink\", \"cart\"], [\"routerLinkActive\", \"active\", \"routerLink\", \"profile\"], [\"routerLinkActive\", \"active\", 3, \"click\"], [\"routerLinkActive\", \"active\", \"routerLink\", \"login\"]],\n  template: function NavbarComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ul\")(1, \"li\")(2, \"a\");\n      i0.ɵɵtext(3, \"TechWorld\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(4, \"li\")(5, \"a\", 0);\n      i0.ɵɵtext(6, \"Home\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(7, \"li\")(8, \"a\", 1);\n      i0.ɵɵtext(9, \"Catalog\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(10, \"li\")(11, \"a\", 2);\n      i0.ɵɵtext(12, \"About Us\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(13, NavbarComponent_ng_container_13_Template, 10, 0, \"ng-container\", 3);\n      i0.ɵɵtemplate(14, NavbarComponent_ng_template_14_Template, 3, 0, \"ng-template\", null, 4, i0.ɵɵtemplateRefExtractor);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      const _r1 = i0.ɵɵreference(15);\n      i0.ɵɵadvance(13);\n      i0.ɵɵproperty(\"ngIf\", ctx.isLoggedIn())(\"ngIfElse\", _r1);\n    }\n  },\n  dependencies: [i2.NgIf, i3.RouterLink, i3.RouterLinkActive],\n  styles: [\"ul[_ngcontent-%COMP%] {\\n    list-style-type: none;\\n    margin: 0;\\n    padding: 0;\\n    overflow: hidden;\\n    background-color: #333;\\n  }\\n  \\n  li[_ngcontent-%COMP%] {\\n    float: left;\\n  }\\n  \\n  li[_ngcontent-%COMP%]   a[_ngcontent-%COMP%] {\\n    display: block;\\n    color: rgb(255, 255, 255);\\n    text-align: center;\\n    padding: 14px 16px;\\n    text-decoration: none;\\n  }\\n  \\n  \\n  li[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]:hover {\\n    background-color: rgba(255, 255, 255, 0);\\n  }\\n\\n  .active[_ngcontent-%COMP%] {\\n    background-color: #0548da;\\n  }\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbmF2YmFyL25hdmJhci5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0kscUJBQXFCO0lBQ3JCLFNBQVM7SUFDVCxVQUFVO0lBQ1YsZ0JBQWdCO0lBQ2hCLHNCQUFzQjtFQUN4Qjs7RUFFQTtJQUNFLFdBQVc7RUFDYjs7RUFFQTtJQUNFLGNBQWM7SUFDZCx5QkFBeUI7SUFDekIsa0JBQWtCO0lBQ2xCLGtCQUFrQjtJQUNsQixxQkFBcUI7RUFDdkI7OztFQUdBO0lBQ0Usd0NBQXdDO0VBQzFDOztFQUVBO0lBQ0UseUJBQXlCO0VBQzNCIiwic291cmNlc0NvbnRlbnQiOlsidWwge1xuICAgIGxpc3Qtc3R5bGUtdHlwZTogbm9uZTtcbiAgICBtYXJnaW46IDA7XG4gICAgcGFkZGluZzogMDtcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgIGJhY2tncm91bmQtY29sb3I6ICMzMzM7XG4gIH1cbiAgXG4gIGxpIHtcbiAgICBmbG9hdDogbGVmdDtcbiAgfVxuICBcbiAgbGkgYSB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgY29sb3I6IHJnYigyNTUsIDI1NSwgMjU1KTtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgcGFkZGluZzogMTRweCAxNnB4O1xuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgfVxuICBcbiAgXG4gIGxpIGE6aG92ZXIge1xuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMCk7XG4gIH1cblxuICAuYWN0aXZlIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDU0OGRhO1xuICB9Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;;;IAOIA,6BAAqD;IACjDA,0BAAI;IAA+CA,oBAAI;IAAAA,iBAAI;IAC3DA,0BAAI;IAAkDA,uBAAO;IAAAA,iBAAI;IACjEA,0BAAI;IAA6BA;MAAAA;MAAA;MAAA,OAASA,0CAAoB;IAAA,EAAC;IAACA,sBAAM;IAAAA,iBAAI;IAC9EA,0BAAe;;;;;IAIXA,0BAAI;IAAgDA,qBAAK;IAAAA,iBAAI;;;ACPrE,OAAM,MAAOC,eAAe;EAE1BC,YAAmBC,WAAyB;IAAzB,gBAAW,GAAXA,WAAW;EAAkB,CAAC,CAAC;EAElDC,QAAQ,IACR;EAEAC,UAAU;IACR,OAAO,IAAI,CAACF,WAAW,CAACG,WAAW,KAAK,IAAI,IAAI,IAAI,CAACH,WAAW,CAACG,WAAW,KAAK,EAAE;EACrF;;AATWL,eAAe;mBAAfA,eAAe;AAAA;AAAfA,eAAe;QAAfA,eAAe;EAAAM;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDR5BX,0BAAI;MACQA,yBAAS;MAAAA,iBAAI;MACrBA,0BAAI;MAA+CA,oBAAI;MAAAA,iBAAI;MAC3DA,0BAAI;MAAkDA,uBAAO;MAAAA,iBAAI;MACjEA,2BAAI;MAAgDA,yBAAQ;MAAAA,iBAAI;MAGhEA,qFAIe;MAGfA,mHAEc;MAElBA,iBAAK;;;;MAXcA,gBAAoB;MAApBA,uCAAoB","names":["i0","NavbarComponent","constructor","userService","ngOnInit","isLoggedIn","currentUser","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["/home/hasan/Desktop/Projects/TechWords/Client/src/app/navbar/navbar.component.html","/home/hasan/Desktop/Projects/TechWords/Client/src/app/navbar/navbar.component.ts"],"sourcesContent":["<ul>\n    <li><a >TechWorld</a></li>\n    <li><a routerLinkActive=\"active\" routerLink=\"home\">Home</a></li>\n    <li><a routerLinkActive=\"active\" routerLink=\"catalog\">Catalog</a></li>\n    <li><a routerLinkActive=\"active\" routerLink=\"about\">About Us</a></li>\n\n    <!-- For logged-in users -->\n    <ng-container *ngIf=\"isLoggedIn(); else notLoggedIn\">\n        <li><a routerLinkActive=\"active\" routerLink=\"cart\">Cart</a></li>\n        <li><a routerLinkActive=\"active\" routerLink=\"profile\">Profile</a></li>\n        <li><a routerLinkActive=\"active\" (click)=\"userService.logout()\">Logout</a></li>\n    </ng-container>\n\n    <!-- For not logged-in users -->\n    <ng-template #notLoggedIn>\n        <li><a routerLinkActive=\"active\" routerLink=\"login\">Login</a></li>\n    </ng-template>\n\n</ul>\n","import { Component, OnInit } from '@angular/core';\nimport { UsersService } from '../services/users.service';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor(public userService: UsersService) { } // Made userService public to access it in template\n\n  ngOnInit(): void {\n  }\n\n  isLoggedIn(): boolean {\n    return this.userService.currentUser !== null && this.userService.currentUser !== \"\";\n  }\n  \n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}